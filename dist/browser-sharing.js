(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["BrowserSharing"] = factory();
	else
		root["BrowserSharing"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/selector-generator/selector-generator.js":
/*!***************************************************************!*\
  !*** ./node_modules/selector-generator/selector-generator.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/* selector-generator (ver. 0.3.0). https://github.com/flamencist/SelectorGenerator */\r\n\r\n(function () {\r\n\r\n  \"use strict\";\r\n\r\n  var exports = {};\r\n\r\n  if (!(\"version\" in exports)) {\r\n    exports.version = \"0.3.0\";\r\n  }\r\n\r\n (function(exports){ \r\n  function SelectorGenerator(options){\r\n\r\n\t var shim = {};\r\n\t //noinspection JSUnresolvedVariable\r\n\t var call = Function.call;\r\n\t \r\n\t /**\r\n\t  * wrap function and use first argument as context (this) in returned function\r\n\t  * @param f {Function} function for call\r\n\t  * @returns {Function}\r\n\t  */\r\n\t function uncurryThis(f) {\r\n\t     return function () {\r\n\t         return call.apply(f, arguments);\r\n\t     };\r\n\t }\r\n\t \r\n\t /**\r\n\t  * check function is native\r\n\t  * @param f {Function} function\r\n\t  * @returns {boolean}\r\n\t  */\r\n\t var isFuncNative = function (f) {\r\n\t     return !!f && (typeof f).toLowerCase() === \"function\"\r\n\t         && (f === Function.prototype\r\n\t         || /^\\s*function\\s*(\\b[a-z$_][a-z0-9$_]*\\b)*\\s*\\((|([a-z$_][a-z0-9$_]*)(\\s*,[a-z$_][a-z0-9$_]*)*)\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*$/i.test(String(f)));\r\n\t };\r\n\t \r\n\t /**\r\n\t  *\r\n\t  * @method getFuncNative\r\n\t  * @param fun\r\n\t  * @return {null}\r\n\t  * @private\r\n\t  */\r\n\t var getFuncNative = function (fun) {\r\n\t     return fun && isFuncNative(fun) ? fun : null;\r\n\t };\r\n\t \r\n\t var array_reduce = uncurryThis(\r\n\t     Array.prototype.reduce && isFuncNative(Array.prototype.reduce) ? Array.prototype.reduce : function (callback, basis) {\r\n\t         var index = 0,\r\n\t             length = this.length;\r\n\t         // concerning the initial value, if one is not provided\r\n\t         if (arguments.length === 1) {\r\n\t             // seek to the first value in the array, accounting\r\n\t             // for the possibility that is is a sparse array\r\n\t             do {\r\n\t                 if (index in this) {\r\n\t                     basis = this[index++];\r\n\t                     break;\r\n\t                 }\r\n\t                 if (++index >= length) {\r\n\t                     throw new TypeError();\r\n\t                 }\r\n\t             } while (1);\r\n\t         }\r\n\t         // reduce\r\n\t         for (; index < length; index++) {\r\n\t             // account for the possibility that the array is sparse\r\n\t             if (index in this) {\r\n\t                 basis = callback(basis, this[index], index);\r\n\t             }\r\n\t         }\r\n\t         return basis;\r\n\t     }\r\n\t );\r\n\t \r\n\t var array_map = uncurryThis(\r\n\t     Array.prototype.map && isFuncNative(Array.prototype.map) ? Array.prototype.map : function (callback, thisp) {\r\n\t         var self = this;\r\n\t         var collect = [];\r\n\t         array_reduce(self, function (undefined, value, index) {\r\n\t             collect.push(callback.call(thisp, value, index, self));\r\n\t         }, void 0);\r\n\t         return collect;\r\n\t     }\r\n\t );\r\n\t \r\n\t var array_filter = uncurryThis(\r\n\t     Array.prototype.filter && isFuncNative(Array.prototype.filter) ? Array.prototype.filter :\r\n\t         function (predicate, that) {\r\n\t             var other = [], v;\r\n\t             for (var i = 0, n = this.length; i < n; i++) {\r\n\t                 if (i in this && predicate.call(that, v = this[i], i, this)) {\r\n\t                     other.push(v);\r\n\t                 }\r\n\t             }\r\n\t             return other;\r\n\t         }\r\n\t );\r\n\t \r\n\t /**\r\n\t  * shim for array.indexOf\r\n\t  *\r\n\t  * @function array_indexOf\r\n\t  * @example\r\n\t  *  ```\r\n\t  *      var arr = [2,3,4];\r\n\t  *      var result = arrayUtils.indexOf(arr, 3);\r\n\t  *      console.log(result);\r\n\t  *  ```\r\n\t  *    *result: 1*\r\n\t  * @type {Function}\r\n\t  * @private\r\n\t  */\r\n\t var array_indexOf = uncurryThis(getFuncNative(Array.prototype.indexOf) ||\r\n\t     function (searchElement, fromIndex) {\r\n\t         var k;\r\n\t \r\n\t         if (!this || !this.length) {//eslint-disable-line no-invalid-this\r\n\t             throw new TypeError(\"\\\"this\\\" is null or not defined\");\r\n\t         }\r\n\t \r\n\t         var O = Object(this);//eslint-disable-line no-invalid-this\r\n\t \r\n\t         var len = O.length >>> 0;\r\n\t \r\n\t         if (len === 0) {\r\n\t             return -1;\r\n\t         }\r\n\t \r\n\t         var n = +fromIndex || 0;\r\n\t \r\n\t         if (Math.abs(n) === Infinity) {\r\n\t             n = 0;\r\n\t         }\r\n\t \r\n\t         if (n >= len) {\r\n\t             return -1;\r\n\t         }\r\n\t \r\n\t         k = Math.max(n >= 0 ? n : len - Math.abs(n), 0);\r\n\t \r\n\t         while (k < len) {\r\n\t             if (k in O && O[k] === searchElement) {\r\n\t                 return k;\r\n\t             }\r\n\t             k++;\r\n\t         }\r\n\t         return -1;\r\n\t     });\r\n\t \r\n\t /**\r\n\t  * array find shim\r\n\t  *\r\n\t  * @function array_find\r\n\t  * @example\r\n\t  *  ```\r\n\t  *      var arr = [2,3,4];\r\n\t  *      var result = arrayUtils.find(arr, function(item){\r\n\t          *          return item % 2 === 0;\r\n\t          *      });\r\n\t  *      console.log(result);\r\n\t  *  ```\r\n\t  *    *result: 2*\r\n\t  * @type {Function}\r\n\t  * @private\r\n\t  */\r\n\t var array_find = uncurryThis(getFuncNative(Array.prototype.find) ||\r\n\t     function (predicate, that) {\r\n\t         var length = this.length;//eslint-disable-line no-invalid-this\r\n\t         if (typeof predicate !== \"function\") {\r\n\t             throw new TypeError(\"Array#find: predicate must be a function\");\r\n\t         }\r\n\t         if (length === 0) {\r\n\t             return undefined;\r\n\t         }\r\n\t         for (var i = 0, value; i < length; i++) {\r\n\t             value = this[i];//eslint-disable-line no-invalid-this\r\n\t             if (predicate.call(that, value, i, this)) {\r\n\t                 return value;\r\n\t             }\r\n\t         }\r\n\t         return undefined;\r\n\t     }\r\n\t );\r\n\t \r\n\t shim.reduce = array_reduce;\r\n\t shim.map = array_map;\r\n\t shim.filter = array_filter;\r\n\t shim.indexOf = array_indexOf;\r\n\t shim.find = array_find;\r\n\t \r\n\t var _ = shim; //eslint-disable-line no-unused-vars\r\n\t exports._  = shim;\r\n\r\n\t var autogenRegexps = [\r\n\t     /\\d{4,}/,\r\n\t     /^ember\\d+/,\r\n\t     /^[0-9_-]+$/,\r\n\t     /^_\\d{2,}/,\r\n\t     /([a-f_-]*[0-9_-]){6,}/i\r\n\t ];\r\n\t \r\n\t /**\r\n\t  * check auto-generated selectors\r\n\t  * @param {String} val\r\n\t  * @return {boolean} is auto-generated\r\n\t  */\r\n\t function autogenCheck(val){\r\n\t     if(!val){\r\n\t         return false;\r\n\t     }\r\n\t     var autogenerated = _.find(autogenRegexps,function(reg){\r\n\t         return reg.test(val);\r\n\t     });\r\n\t     return !!autogenerated;\r\n\t \r\n\t }\r\n\t exports.autogenCheck = autogenCheck;\r\n\t \r\n\r\n\t var cssEscaper = (function(){\r\n\t     /**\r\n\t      * @function escapeIdentifierIfNeeded\r\n\t      * @param {string} ident\r\n\t      * @return {string}\r\n\t      */\r\n\t     function escapeIdentifierIfNeeded(ident) {\r\n\t         if (isCssIdentifier(ident)) {\r\n\t             return ident;\r\n\t         }\r\n\t         var shouldEscapeFirst = /^(?:[0-9]|-[0-9-]?)/.test(ident);\r\n\t         var lastIndex = ident.length - 1;\r\n\t         return ident.replace(/./g, function (c, i) {\r\n\t             return ((shouldEscapeFirst && i === 0) || !isCssIdentChar(c)) ? escapeAsciiChar(c, i === lastIndex) : c;\r\n\t         });\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function escapeAsciiChar\r\n\t      * @param {string} c\r\n\t      * @param {boolean} isLast\r\n\t      * @return {string}\r\n\t      */\r\n\t     function escapeAsciiChar(c, isLast) {\r\n\t         return \"\\\\\" + toHexByte(c) + (isLast ? \"\" : \" \");\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function toHexByte\r\n\t      * @param {string} c\r\n\t      */\r\n\t     function toHexByte(c) {\r\n\t         var hexByte = c.charCodeAt(0).toString(16);\r\n\t         if (hexByte.length === 1) {\r\n\t             hexByte = \"0\" + hexByte;\r\n\t         }\r\n\t         return hexByte;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function isCssIdentChar\r\n\t      * @param {string} c\r\n\t      * @return {boolean}\r\n\t      */\r\n\t     function isCssIdentChar(c) {\r\n\t         if (/[a-zA-Z0-9_-]/.test(c)) {\r\n\t             return true;\r\n\t         }\r\n\t         return c.charCodeAt(0) >= 0xA0;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function isCssIdentifier\r\n\t      * @param {string} value\r\n\t      * @return {boolean}\r\n\t      */\r\n\t     function isCssIdentifier(value) {\r\n\t         return /^-?[a-zA-Z_][a-zA-Z0-9_-]*$/.test(value);\r\n\t     }\r\n\t \r\n\t     return {escape : escapeIdentifierIfNeeded};\r\n\t \r\n\t })();\r\n\t \r\n\t exports.cssEscaper = cssEscaper;\r\n\t \r\n\r\n\t /**\r\n\t  * @constructor\r\n\t  * @param {string} value\r\n\t  * @param {boolean} optimized\r\n\t  */\r\n\t var DomNodePathStep = function (value, optimized) {\r\n\t     this.value = value;\r\n\t     this.optimized = optimized || false;\r\n\t };\r\n\t \r\n\t DomNodePathStep.prototype = {\r\n\t     /**\r\n\t      * @return {string}\r\n\t      */\r\n\t     toString: function () {\r\n\t         return this.value;\r\n\t     }\r\n\t };\r\n\t \r\n\t exports.DomNodePathStep = DomNodePathStep;\r\n\t \r\n\r\n\t /* globals DomNodePathStep, cssEscaper, autogenCheck */ //eslint-disable-line no-unused-vars\r\n\t /**\r\n\t  * @param {Object?} options\r\n\t  * @param {boolean?} options.withoutNthChild\r\n\t  * @param {boolean?} options.optimized\r\n\t  * @param {Node?} options.targetNode\r\n\t  * @class\r\n\t  * @constructor\r\n\t  */\r\n\t function SelectorGeneratorStep(options) {\r\n\t     options = options || {\r\n\t             withoutNthChild: false,\r\n\t             targetNode: null\r\n\t         };\r\n\t \r\n\t     /**\r\n\t      * generate selector for current node\r\n\t      * @param {HTMLElement} node\r\n\t      * @return {DomNodePathStep} selector for current node\r\n\t      */\r\n\t     this.visit = function (node) {\r\n\t         if (node.nodeType !== 1) {\r\n\t             return null;\r\n\t         }\r\n\t \r\n\t         var nodeName = node.nodeName.toLowerCase();\r\n\t         var parent = node.parentNode;\r\n\t         var siblings = parent.children || [];\r\n\t         var siblingsWithSameNodeName = getSiblingsWithSameNodeName(node, siblings);\r\n\t \r\n\t         var needsId = hasId(node, siblingsWithSameNodeName);\r\n\t         if (needsId) {\r\n\t             var id = node.getAttribute(\"id\");\r\n\t             return new DomNodePathStep(nodeName + idSelector(id), true);\r\n\t         }\r\n\t         var isRootNode = !parent || parent.nodeType === 9;\r\n\t         if (isRootNode) // document node\r\n\t         {\r\n\t             return new DomNodePathStep(nodeName, true);\r\n\t         }\r\n\t \r\n\t         var hasAttributeName = hasUniqueAttributeName(node,siblingsWithSameNodeName);\r\n\t         var needsClassNames = siblingsWithSameNodeName.length > 0;\r\n\t         var needsNthChild = isNeedsNthChild(node, siblingsWithSameNodeName, hasAttributeName);\r\n\t         var needsType = hasType(node);\r\n\t \r\n\t         var result = nodeName;\r\n\t \r\n\t         if (hasAttributeName) {\r\n\t             var attributeName = node.getAttribute(\"name\");\r\n\t             result += \"[name=\\\"\" + cssEscaper.escape(attributeName) + \"\\\"]\";\r\n\t             return new DomNodePathStep(result, true);\r\n\t         }\r\n\t \r\n\t         if (needsType) {\r\n\t             result += \"[type=\\\"\" + node.getAttribute(\"type\") + \"\\\"]\";\r\n\t         }\r\n\t \r\n\t         if (needsNthChild && !options.withoutNthChild) {\r\n\t             var ownIndex = _.indexOf(siblings, node);\r\n\t             result += \":nth-child(\" + (ownIndex + 1) + \")\";\r\n\t         } else if (needsClassNames) {\r\n\t             var prefixedOwnClassNamesArray = prefixedElementClassNames(node);\r\n\t             for (var prefixedName in keySet(prefixedOwnClassNamesArray)) { //eslint-disable-line guard-for-in\r\n\t                 result += \".\" + cssEscaper.escape(prefixedName.substr(1));\r\n\t             }\r\n\t         }\r\n\t \r\n\t         return new DomNodePathStep(result, false);\r\n\t     };\r\n\t \r\n\t     function hasUniqueAttributeName(node, siblingsWithSameNodeName){\r\n\t         var attributeName = node.getAttribute(\"name\");\r\n\t         if(!attributeName || autogenCheck(attributeName)){\r\n\t             return false;\r\n\t         }\r\n\t         var isSimpleFormElement = isSimpleInput(node, options.targetNode === node) || isFormWithoutId(node);\r\n\t         return !!(isSimpleFormElement && attributeName && !_.find(siblingsWithSameNodeName,function(sibling){\r\n\t             return sibling.getAttribute(\"name\") === attributeName;\r\n\t         }));\r\n\t     }\r\n\t \r\n\t     function isNeedsNthChild(node, siblings, isUniqueAttributeName) {\r\n\t         var needsNthChild = false;\r\n\t         var prefixedOwnClassNamesArray = prefixedElementClassNames(node);\r\n\t         for (var i = 0; (!needsNthChild) && i < siblings.length; ++i) {\r\n\t             var sibling = siblings[i];\r\n\t             if (needsNthChild) {\r\n\t                 continue;\r\n\t             }\r\n\t \r\n\t             var ownClassNames = keySet(prefixedOwnClassNamesArray);\r\n\t             var ownClassNameCount = 0;\r\n\t \r\n\t             for (var name in ownClassNames) {\r\n\t                 if (ownClassNames.hasOwnProperty(name)) {\r\n\t                     ++ownClassNameCount;\r\n\t                 }\r\n\t             }\r\n\t             if (ownClassNameCount === 0 && !isUniqueAttributeName) {\r\n\t                 needsNthChild = true;\r\n\t                 continue;\r\n\t             }\r\n\t             var siblingClassNamesArray = prefixedElementClassNames(sibling);\r\n\t \r\n\t             for (var j = 0; j < siblingClassNamesArray.length; ++j) {\r\n\t                 var siblingClass = siblingClassNamesArray[j];\r\n\t                 if (!ownClassNames.hasOwnProperty(siblingClass)) {\r\n\t                     continue;\r\n\t                 }\r\n\t                 delete ownClassNames[siblingClass];\r\n\t                 if (!--ownClassNameCount && !isUniqueAttributeName) {\r\n\t                     needsNthChild = true;\r\n\t                     break;\r\n\t                 }\r\n\t             }\r\n\t         }\r\n\t         return needsNthChild;\r\n\t     }\r\n\t \r\n\t     function getSiblingsWithSameNodeName(node, siblings) {\r\n\t         return _.filter(siblings, function (sibling) {\r\n\t             return sibling.nodeType === 1 && sibling !== node && sibling.nodeName.toLowerCase() === node.nodeName.toLowerCase();\r\n\t         });\r\n\t     }\r\n\t \r\n\t     function hasType(node) {\r\n\t         return node.getAttribute(\"type\") && ( (isSimpleInput(node, options.targetNode === node) && !getClassName(node)) || isFormWithoutId(node) || isButtonWithoutId(node));\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function idSelector\r\n\t      * @param {string} id\r\n\t      * @return {string}\r\n\t      */\r\n\t     function idSelector(id) {\r\n\t         return \"#\" + cssEscaper.escape(id);\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * element has siblings with same id and same tag\r\n\t      * @function hasId\r\n\t      * @param {Element} node\r\n\t      * @param {Array<Element>} siblings Array of elements , parent.children\r\n\t      * @return {boolean}\r\n\t      */\r\n\t     function hasId(node, siblings) {\r\n\t         var id = node.getAttribute(\"id\");\r\n\t         if(!id){\r\n\t             return false;\r\n\t         }\r\n\t         if(autogenCheck(id)){\r\n\t             return false;\r\n\t         }\r\n\t         return _.filter(siblings, function (s) {\r\n\t                 return s.getAttribute(\"id\") === id;\r\n\t             }).length === 0;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function keySet\r\n\t      * @param {Array} array of keys\r\n\t      * @return {Object}\r\n\t      */\r\n\t     function keySet(array) {\r\n\t         var keys = {};\r\n\t         for (var i = 0; i < array.length; ++i) {\r\n\t             keys[array[i]] = true;\r\n\t         }\r\n\t         return keys;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function prefixedElementClassNames\r\n\t      * @param {HTMLElement} node\r\n\t      * @return {!Array.<string>}\r\n\t      */\r\n\t     function prefixedElementClassNames(node) {\r\n\t         var classAttribute = getClassName(node);\r\n\t         if (!classAttribute) {\r\n\t             return [];\r\n\t         }\r\n\t \r\n\t         var classes = classAttribute.split(/\\s+/g);\r\n\t         var existClasses = _.filter(classes, function(c){\r\n\t             return c && !autogenCheck(c);\r\n\t         });\r\n\t         return _.map(existClasses, function (name) {\r\n\t             // The prefix is required to store \"__proto__\" in a object-based map.\r\n\t             return \"$\" + name;\r\n\t         });\r\n\t     }\r\n\t \r\n\t     function isFormWithoutId(node) {\r\n\t         return node.nodeName.toLowerCase() === \"form\" && !node.getAttribute(\"id\");\r\n\t     }\r\n\t \r\n\t     function isButtonWithoutId(node) {\r\n\t         return node.nodeName.toLowerCase() === \"button\" && !node.getAttribute(\"id\");\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * target is simple input without classes,id\r\n\t      * @function isSimpleInput\r\n\t      * @param node\r\n\t      * @param isTargetNode\r\n\t      * @return {boolean}\r\n\t      */\r\n\t     function isSimpleInput(node, isTargetNode) {\r\n\t         return isTargetNode && node.nodeName.toLowerCase() === \"input\" ;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function getClassName\r\n\t      * get css class of element\r\n\t      * @param {HTMLElement} node Web element\r\n\t      * @return {string}\r\n\t      */\r\n\t     function getClassName(node) {\r\n\t         return node.getAttribute(\"class\") || node.className;\r\n\t     }\r\n\t \r\n\t }\r\n\t \r\n\t exports.SelectorGeneratorStep = SelectorGeneratorStep;\r\n\t \r\n\r\n\t /*global  SelectorGeneratorStep */ //eslint-disable-line no-unused-vars\r\n\t /**\r\n\t  * @class\r\n\t  * get unique selector, path of node\r\n\t  * @param {Object?} options\r\n\t  * @param {function?} options.querySelectorAll\r\n\t  * @constructor\r\n\t  */\r\n\t function SelectorGenerator(options) { //eslint-disable-line no-unused-vars\r\n\t \r\n\t     options = options || {};\r\n\t \r\n\t     /**\r\n\t      * @description get full path of node\r\n\t      * @function getPath\r\n\t      * @param {HTMLElement} node\r\n\t      * @return {string}\r\n\t      */\r\n\t     function getPath(node) {\r\n\t         if (!node || node.nodeType !== 1) {\r\n\t             return \"\";\r\n\t         }\r\n\t         var selectorGeneratorStep = new SelectorGeneratorStep({\r\n\t             withoutNthChild: true,\r\n\t             targetNode: node\r\n\t         });\r\n\t         var steps = [];\r\n\t         var contextNode = node;\r\n\t         while (contextNode) {\r\n\t             var step = selectorGeneratorStep.visit(contextNode);\r\n\t             if (!step) {\r\n\t                 break;\r\n\t             } // Error - bail out early.\r\n\t             steps.push(step);\r\n\t             contextNode = contextNode.parentNode;\r\n\t         }\r\n\t \r\n\t         steps.reverse();\r\n\t         return steps.join(\" \");\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @param {HTMLElement} node\r\n\t      * @return {string}\r\n\t      */\r\n\t     function getSelector(node) {\r\n\t         if (!node || node.nodeType !== 1) {\r\n\t             return \"\";\r\n\t         }\r\n\t         var selectorGeneratorStep = new SelectorGeneratorStep({targetNode: node});\r\n\t         var steps = [];\r\n\t         var contextNode = node;\r\n\t         while (contextNode) {\r\n\t             var step = selectorGeneratorStep.visit(contextNode);\r\n\t             if (!step) {\r\n\t                 break; // Error - bail out early.\r\n\t             }\r\n\t             steps.push(step);\r\n\t             if (step.optimized) {\r\n\t                 if (isUniqueSelector(buildSelector(steps))) {\r\n\t                     break;\r\n\t                 }\r\n\t             }\r\n\t             contextNode = contextNode.parentNode;\r\n\t         }\r\n\t \r\n\t         var simplifiedSteps = simplifySelector(steps);\r\n\t         return buildSelector(simplifiedSteps);\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * simplify selector\r\n\t      * @example\r\n\t      * ```\r\n\t      *  <div>\r\n\t      *      <div>\r\n\t      *          <form>\r\n\t      *              <input type=\"text\"/>\r\n\t      *          </form>\r\n\t      *      </div>\r\n\t      *  </div>\r\n\t      *\r\n\t      * var steps = [new DomNodePathStep(\"input[type='text']\"), new DomNodePathStep(\"form\"), new DomNodePathStep(\"div\"), new DomNodePathStep(\"div\")];\r\n\t      * var simplified = simplifySelector(steps); // [\"input[type='text']\", \"form\"]\r\n\t      * ```\r\n\t      *\r\n\t      * @example\r\n\t      * ```\r\n\t      *  <div id=\"loginForm\">\r\n\t      *      <div>\r\n\t      *          <div>\r\n\t      *              <input type=\"text\"/>\r\n\t      *          </div>\r\n\t      *      </div>\r\n\t      *  </div>\r\n\t      *\r\n\t      * var steps = [new DomNodePathStep(\"input[type='text']\"), new DomNodePathStep(\"div\"), new DomNodePathStep(\"div\"), new DomNodePathStep(\"div#loginForm\")];\r\n\t      * var simplified = simplifySelector(steps); // [[\"input[type='text']\"],[\"div#loginForm\"]]\r\n\t      * ```\r\n\t      *\r\n\t      * @method simplifySelector\r\n\t      * @param {Array} steps parts of selector\r\n\t      * @return {Array} steps array of steps or array Arrays of steps\r\n\t      */\r\n\t     function simplifySelector(steps) {\r\n\t         var minLength = 2;\r\n\t         //if count of selectors is little, that not modify selector\r\n\t         if (steps.length <= minLength) {\r\n\t             return steps;\r\n\t         }\r\n\t \r\n\t         var stepsCopy = steps.slice();\r\n\t         removeHtmlBodySteps(stepsCopy);\r\n\t \r\n\t         var lastStep = stepsCopy[stepsCopy.length - 1];\r\n\t         var parentWithId = lastStep.toString().indexOf(\"#\") >= 0;\r\n\t         var parentWithName = lastStep.toString().indexOf(\"name=\") >= 0;\r\n\t \r\n\t         if (parentWithId || parentWithName) {\r\n\t             return simplifyStepsWithParent(stepsCopy);\r\n\t         } else {\r\n\t             return regularSimplifySteps(stepsCopy, minLength);\r\n\t         }\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * remove Html, Body Steps\r\n\t      * @param steps\r\n\t      */\r\n\t     function removeHtmlBodySteps(steps) {\r\n\t         while (steps[steps.length - 1].toString() === \"html\" || steps[steps.length - 1].toString() === \"body\") {\r\n\t             steps.pop();\r\n\t         }\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      *  simplifyStepsWithParent\r\n\t      * @function simplifyStepsWithParent\r\n\t      * @param steps\r\n\t      * @return {Array} array of arrays\r\n\t      */\r\n\t     function simplifyStepsWithParent(steps) {\r\n\t         var parentStep = steps.slice(-1);\r\n\t         var sliced = steps.slice(0, 1);\r\n\t         while (sliced.length < (steps.length - 1)) {\r\n\t             var selector = buildSelector([sliced, parentStep]);\r\n\t             if (isUniqueSelector(selector)) {\r\n\t                 break;\r\n\t             }\r\n\t             sliced = steps.slice(0, sliced.length + 1);\r\n\t         }\r\n\t         return [sliced, parentStep];\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * regularSimplifySteps\r\n\t      * @method regularSimplifySteps\r\n\t      * @param {Array} steps\r\n\t      * @param {int=2} minLength\r\n\t      * @return {Array} array of steps\r\n\t      */\r\n\t     function regularSimplifySteps(steps, minLength) {\r\n\t         minLength = minLength || 2;\r\n\t         var sliced = steps.slice(0, minLength);\r\n\t         while (sliced.length < steps.length) {\r\n\t             var selector = buildSelector(sliced);\r\n\t             if (isUniqueSelector(selector)) {\r\n\t                 break;\r\n\t             }\r\n\t             sliced = steps.slice(0, sliced.length + 1);\r\n\t         }\r\n\t         return sliced;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * create selector string from steps array\r\n\t      * @function buildSelector\r\n\t      * @example\r\n\t      * with single array of steps\r\n\t      * ```\r\n\t      * <form id=\"loginForm\">\r\n\t      *    <input type='text'/>\r\n\t      * </form>\r\n\t      *\r\n\t      *  var steps = [new DomNodePathStep(\"input[type='text']\"),new DomNodePathStep(\"form#loginForm\")];\r\n\t      *  var selector = buildSelector(steps); // \"form#loginForm > input[type='text']\"\r\n\t      * ```\r\n\t      *\r\n\t      * @example\r\n\t      * with multiple array of steps\r\n\t      * ```\r\n\t      * <div id=\"loginForm\">\r\n\t      *    <div>\r\n\t      *       <div>\r\n\t      *          <input type='text'/>\r\n\t      *      </div>\r\n\t      *   </div>\r\n\t      *  </div>\r\n\t      *\r\n\t      * var steps = [[new DomNodePathStep(\"input[type='text']\")],[new DomNodePathStep(\"div#loginForm\")]];\r\n\t      * var selector = buildSelector(steps); // \"div#loginForm input[type='text']\"\r\n\t      * ```\r\n\t      *\r\n\t      * @param {Array} steps Array of string or array of Array of string\r\n\t      * @return {string} selector string\r\n\t      */\r\n\t     function buildSelector(steps) {\r\n\t         var stepsCopy = steps.slice();\r\n\t         stepsCopy.reverse();\r\n\t         //check steps is regular array of steps\r\n\t         if (typeof(stepsCopy[0].value) !== \"undefined\") {\r\n\t             return stepsCopy.join(\" > \");\r\n\t         } else {\r\n\t             return _.reduce(stepsCopy, function (previosValue, currentValue) {\r\n\t                 var selector = buildSelector(currentValue);\r\n\t                 return previosValue ? previosValue + \" \" + selector : selector;\r\n\t             }, \"\");\r\n\t         }\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * @function isUniqueSelector\r\n\t      * detect selector is unique\r\n\t      * @param {String} selector\r\n\t      * @return {boolean} unique selector?\r\n\t      */\r\n\t     function isUniqueSelector(selector) {\r\n\t         if (!options.querySelectorAll) {\r\n\t             return true;\r\n\t         }\r\n\t         return options.querySelectorAll(selector).length < 2;\r\n\t     }\r\n\t \r\n\t     /**\r\n\t      * get unique selector\r\n\t      * @method\r\n\t      * @param {HTMLElement} node html element\r\n\t      * @param {boolean?} optimized get short selector\r\n\t      * @returns {String} selector\r\n\t      */\r\n\t     this.getSelector = getSelector;\r\n\t     /**\r\n\t      * path of node\r\n\t      * @method\r\n\t      * @param {HTMLElement} node html element\r\n\t      * @returns {String} path\r\n\t      */\r\n\t     this.getPath = getPath;\r\n\t }\r\n\t \r\n\t exports.SelectorGenerator = SelectorGenerator;\r\n\r\n  return new SelectorGenerator(options);\r\n }\r\n  exports.SelectorGenerator = SelectorGenerator;\r\n } (exports));\r\n\r\nfor(var key in exports){ if(exports.hasOwnProperty(key)){ exports.SelectorGenerator[key] = exports[key]; }}\r\n window.SelectorGenerator = exports.SelectorGenerator;\r\n\r\n} ());\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/selector-generator/selector-generator.js\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.initListener = exports.initObserver = void 0;\n__webpack_require__(/*! selector-generator */ \"./node_modules/selector-generator/selector-generator.js\");\nfunction initObserver() {\n    sendAllDOM();\n    var generator = new SelectorGenerator();\n    var serializer = new XMLSerializer();\n    var targetNode = document.getElementById('root');\n    var config = { attributes: true, childList: true, subtree: true };\n    var callback = function (mutationsList, observer) {\n        for (var _i = 0, mutationsList_1 = mutationsList; _i < mutationsList_1.length; _i++) {\n            var mutation = mutationsList_1[_i];\n            if (mutation.type === 'childList') {\n                console.log('mutation', mutation);\n                var selector = generator.getSelector(mutation.target);\n                var htmlString = serializer.serializeToString(mutation.target);\n                sendMessage({\n                    operation: 'add',\n                    selector: selector,\n                    htmlString: htmlString,\n                });\n            }\n            else if (mutation.type === 'attributes') {\n                console.log('The ' + mutation.attributeName + ' attribute was modified.');\n            }\n        }\n    };\n    var observer = new MutationObserver(callback);\n    observer.observe(targetNode, config);\n}\nexports.initObserver = initObserver;\nfunction sendAllDOM() {\n    var serializer = new XMLSerializer();\n    var selector = '#root';\n    var element = document.querySelector(selector);\n    var htmlString = serializer.serializeToString(element);\n    sendMessage({ operation: 'add', htmlString: htmlString, selector: selector });\n}\nfunction update(_a) {\n    var htmlString = _a.htmlString, selector = _a.selector, operation = _a.operation;\n    var element = document.querySelector(selector);\n    if (!element) {\n        throw Error('element not found');\n    }\n    console.log('UPDATER:', operation);\n    switch (operation) {\n        case 'add':\n            element.innerHTML = '';\n            element.insertAdjacentHTML('afterbegin', htmlString);\n        case 'remove':\n    }\n}\nfunction initListener() {\n    window.addEventListener('message', function (event) {\n        console.log('Updater - Receive event: ', event.data);\n        update(event.data);\n    });\n}\nexports.initListener = initListener;\nfunction sendMessage(_a) {\n    var operation = _a.operation, selector = _a.selector, htmlString = _a.htmlString;\n    console.log('sendMessage', operation, selector, htmlString);\n    window.parent.postMessage({\n        operation: operation,\n        htmlString: htmlString,\n        selector: selector,\n    }, '*');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9Ccm93c2VyU2hhcmluZy8uL3NyYy9pbmRleC50cz8yYWNmIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5pbml0TGlzdGVuZXIgPSBleHBvcnRzLmluaXRPYnNlcnZlciA9IHZvaWQgMDtcbnJlcXVpcmUoXCJzZWxlY3Rvci1nZW5lcmF0b3JcIik7XG5mdW5jdGlvbiBpbml0T2JzZXJ2ZXIoKSB7XG4gICAgc2VuZEFsbERPTSgpO1xuICAgIHZhciBnZW5lcmF0b3IgPSBuZXcgU2VsZWN0b3JHZW5lcmF0b3IoKTtcbiAgICB2YXIgc2VyaWFsaXplciA9IG5ldyBYTUxTZXJpYWxpemVyKCk7XG4gICAgdmFyIHRhcmdldE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncm9vdCcpO1xuICAgIHZhciBjb25maWcgPSB7IGF0dHJpYnV0ZXM6IHRydWUsIGNoaWxkTGlzdDogdHJ1ZSwgc3VidHJlZTogdHJ1ZSB9O1xuICAgIHZhciBjYWxsYmFjayA9IGZ1bmN0aW9uIChtdXRhdGlvbnNMaXN0LCBvYnNlcnZlcikge1xuICAgICAgICBmb3IgKHZhciBfaSA9IDAsIG11dGF0aW9uc0xpc3RfMSA9IG11dGF0aW9uc0xpc3Q7IF9pIDwgbXV0YXRpb25zTGlzdF8xLmxlbmd0aDsgX2krKykge1xuICAgICAgICAgICAgdmFyIG11dGF0aW9uID0gbXV0YXRpb25zTGlzdF8xW19pXTtcbiAgICAgICAgICAgIGlmIChtdXRhdGlvbi50eXBlID09PSAnY2hpbGRMaXN0Jykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdtdXRhdGlvbicsIG11dGF0aW9uKTtcbiAgICAgICAgICAgICAgICB2YXIgc2VsZWN0b3IgPSBnZW5lcmF0b3IuZ2V0U2VsZWN0b3IobXV0YXRpb24udGFyZ2V0KTtcbiAgICAgICAgICAgICAgICB2YXIgaHRtbFN0cmluZyA9IHNlcmlhbGl6ZXIuc2VyaWFsaXplVG9TdHJpbmcobXV0YXRpb24udGFyZ2V0KTtcbiAgICAgICAgICAgICAgICBzZW5kTWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAgIG9wZXJhdGlvbjogJ2FkZCcsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcixcbiAgICAgICAgICAgICAgICAgICAgaHRtbFN0cmluZzogaHRtbFN0cmluZyxcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKG11dGF0aW9uLnR5cGUgPT09ICdhdHRyaWJ1dGVzJykge1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdUaGUgJyArIG11dGF0aW9uLmF0dHJpYnV0ZU5hbWUgKyAnIGF0dHJpYnV0ZSB3YXMgbW9kaWZpZWQuJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHZhciBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGNhbGxiYWNrKTtcbiAgICBvYnNlcnZlci5vYnNlcnZlKHRhcmdldE5vZGUsIGNvbmZpZyk7XG59XG5leHBvcnRzLmluaXRPYnNlcnZlciA9IGluaXRPYnNlcnZlcjtcbmZ1bmN0aW9uIHNlbmRBbGxET00oKSB7XG4gICAgdmFyIHNlcmlhbGl6ZXIgPSBuZXcgWE1MU2VyaWFsaXplcigpO1xuICAgIHZhciBzZWxlY3RvciA9ICcjcm9vdCc7XG4gICAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKTtcbiAgICB2YXIgaHRtbFN0cmluZyA9IHNlcmlhbGl6ZXIuc2VyaWFsaXplVG9TdHJpbmcoZWxlbWVudCk7XG4gICAgc2VuZE1lc3NhZ2UoeyBvcGVyYXRpb246ICdhZGQnLCBodG1sU3RyaW5nOiBodG1sU3RyaW5nLCBzZWxlY3Rvcjogc2VsZWN0b3IgfSk7XG59XG5mdW5jdGlvbiB1cGRhdGUoX2EpIHtcbiAgICB2YXIgaHRtbFN0cmluZyA9IF9hLmh0bWxTdHJpbmcsIHNlbGVjdG9yID0gX2Euc2VsZWN0b3IsIG9wZXJhdGlvbiA9IF9hLm9wZXJhdGlvbjtcbiAgICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpO1xuICAgIGlmICghZWxlbWVudCkge1xuICAgICAgICB0aHJvdyBFcnJvcignZWxlbWVudCBub3QgZm91bmQnKTtcbiAgICB9XG4gICAgY29uc29sZS5sb2coJ1VQREFURVI6Jywgb3BlcmF0aW9uKTtcbiAgICBzd2l0Y2ggKG9wZXJhdGlvbikge1xuICAgICAgICBjYXNlICdhZGQnOlxuICAgICAgICAgICAgZWxlbWVudC5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgICAgIGVsZW1lbnQuaW5zZXJ0QWRqYWNlbnRIVE1MKCdhZnRlcmJlZ2luJywgaHRtbFN0cmluZyk7XG4gICAgICAgIGNhc2UgJ3JlbW92ZSc6XG4gICAgfVxufVxuZnVuY3Rpb24gaW5pdExpc3RlbmVyKCkge1xuICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgZnVuY3Rpb24gKGV2ZW50KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdVcGRhdGVyIC0gUmVjZWl2ZSBldmVudDogJywgZXZlbnQuZGF0YSk7XG4gICAgICAgIHVwZGF0ZShldmVudC5kYXRhKTtcbiAgICB9KTtcbn1cbmV4cG9ydHMuaW5pdExpc3RlbmVyID0gaW5pdExpc3RlbmVyO1xuZnVuY3Rpb24gc2VuZE1lc3NhZ2UoX2EpIHtcbiAgICB2YXIgb3BlcmF0aW9uID0gX2Eub3BlcmF0aW9uLCBzZWxlY3RvciA9IF9hLnNlbGVjdG9yLCBodG1sU3RyaW5nID0gX2EuaHRtbFN0cmluZztcbiAgICBjb25zb2xlLmxvZygnc2VuZE1lc3NhZ2UnLCBvcGVyYXRpb24sIHNlbGVjdG9yLCBodG1sU3RyaW5nKTtcbiAgICB3aW5kb3cucGFyZW50LnBvc3RNZXNzYWdlKHtcbiAgICAgICAgb3BlcmF0aW9uOiBvcGVyYXRpb24sXG4gICAgICAgIGh0bWxTdHJpbmc6IGh0bWxTdHJpbmcsXG4gICAgICAgIHNlbGVjdG9yOiBzZWxlY3RvcixcbiAgICB9LCAnKicpO1xufVxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.ts ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./src/index.ts */"./src/index.ts");


/***/ })

/******/ });
});